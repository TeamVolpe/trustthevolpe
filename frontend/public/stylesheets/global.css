@charset "UTF-8";
@font-face {
  font-family: icons;
  src: url("../fonts/icons.eot");
  src: url("../fonts/icons.eot?#iefix") format("embedded-opentype"), url("../fonts/icons.woff") format("woff"), url("../fonts/icons.ttf") format("truetype"), url("../fonts/icons.svg#icons") format("svg");
  font-weight: normal;
  font-style: normal; }

.icon:before {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  content: "";
  font-family: 'icons';
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1;
  speak: none;
  text-transform: none; }

.icon.-facebook:before {
  content: ""; }

.icon.-instagram:before {
  content: ""; }

.icon.-twitter:before {
  content: ""; }

/**! normalize.css v2.1.1 | MIT License | git.io/normalize */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block; }

audio, canvas, video {
  display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden] {
  display: none; }

html {
  background: #fff;
  color: #000;
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

a:focus {
  outline: thin dotted; }

a:active, a:hover {
  outline: 0; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

hr {
  box-sizing: content-box;
  height: 0; }

mark {
  background: #ff0;
  color: #000; }

code, kbd, pre, samp {
  font-family: monospace, serif;
  font-size: 1em; }

pre {
  white-space: pre-wrap; }

q {
  quotes: "“" "”" "‘" "’"; }

small {
  font-size: 80%; }

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 0; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0; }

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0; }

button, input {
  line-height: normal; }

button, select {
  text-transform: none; }

button, html input[type='button'], input[type='reset'], input[type='submit'] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled], html input[disabled] {
  cursor: default; }

input[type='checkbox'], input[type='radio'] {
  box-sizing: border-box;
  padding: 0; }

input[type='search'] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }
  input[type='search']::-webkit-search-cancel-button, input[type='search']::-webkit-search-decoration {
    -webkit-appearance: none; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto;
  vertical-align: top; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

@font-face {
  font-family: OpenSans;
  src: url("../fonts/OpenSans-Regular-webfont.eot");
  src: url("../fonts/OpenSans-Regular-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/OpenSans-Regular-webfont.woff2") format("woff2"), url("../fonts/OpenSans-Regular-webfont.woff") format("woff"), url("../fonts/OpenSans-Regular-webfont.ttf") format("truetype"), url("../fonts/OpenSans-Regular-webfont.svg#OpenSans") format("svg");
  font-weight: normal;
  font-style: normal; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  @font-face {
    font-family: OpenSans;
    src: url("../fonts/OpenSans-Regular-webfont.svg#OpenSans") format("svg"); } }

@font-face {
  font-family: OpenSans;
  src: url("../fonts/OpenSans-Bold-webfont.eot");
  src: url("../fonts/OpenSans-Bold-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/OpenSans-Bold-webfont.woff2") format("woff2"), url("../fonts/OpenSans-Bold-webfont.woff") format("woff"), url("../fonts/OpenSans-Bold-webfont.ttf") format("truetype"), url("../fonts/OpenSans-Bold-webfont.svg#OpenSans") format("svg");
  font-weight: bold;
  font-style: normal; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  @font-face {
    font-family: OpenSans;
    src: url("../fonts/OpenSans-Bold-webfont.svg#OpenSans") format("svg"); } }

@font-face {
  font-family: Michroma;
  src: url("../fonts/michroma-webfont.eot");
  src: url("../fonts/michroma-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/michroma-webfont.woff2") format("woff2"), url("../fonts/michroma-webfont.woff") format("woff"), url("../fonts/michroma-webfont.ttf") format("truetype"), url("../fonts/michroma-webfont.svg#Michroma") format("svg");
  font-weight: bold;
  font-style: normal; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  @font-face {
    font-family: Michroma;
    src: url("../fonts/michroma-webfont.svg#Michroma") format("svg"); } }

body {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  color: #fff;
  font-family: Michroma, Raleway, OpenSans, sans-serif;
  font-size: 1.25em;
  text-align: center; }

small {
  font-size: 0.75em; }

a {
  color: #fff;
  text-decoration: none;
  opacity: 1;
  outline: 0;
  transition: all 0.2s ease-in-out; }
  a:hover {
    opacity: 0.55; }
  a:hover, a:focus, a:active {
    outline: 0; }

.screenreader {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important; }

html, body {
  background-color: #000;
  width: 100%;
  height: 100%;
  background-image: url("/images/bkg6.jpg"); }

.container {
  height: 100%;
  letter-spacing: 0.3em;
  font-size: 0.85em; }

#header {
  padding-top: 1em;
  margin-bottom: 1.5em;
  text-align: center; }
  #header img {
    width: 100%;
    max-width: 736.25px; }

a.tonylink {
  display: inline-block;
  background-image: url("/images/new-tony-2x.png");
  background-repeat: no-repeat;
  background-position: right;
  background-size: 1em;
  padding-right: 1em; }

#content .tonyviewer {
  width: 100%;
  max-width: 376.25px; }

#content .tonylinks {
  margin-top: 1em; }
  #content .tonylinks .make-a-tony {
    margin-right: 2em; }
  #content .tonylinks .link-a-tony {
    background-image: url("/images/link-tony-2x.png"); }

#footer {
  padding-top: 3em;
  padding-bottom: 1em;
  position: absolute;
  left: 0;
  right: 0; }
  #footer #tony-footer .tony-footer-thumb {
    display: inline-block;
    padding: 1em 1em 0em 0em;
    max-height: 12em; }

.overlay-visible {
  visibility: visible;
  opacity: 1;
  transition: visibility 0.3s linear, opacity 0.3s linear; }

.overlay-invisible {
  visibility: hidden;
  opacity: 0;
  transition: visibility 0s linear 0.3s, opacity 0.3s linear; }

.overlay {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.85);
  z-index: 500;
  text-align: center; }
  .overlay .overlay-close {
    position: fixed;
    right: 0;
    top: 0;
    padding-top: 1em;
    padding-right: 1em;
    width: 33.75px; }

#tonymaker {
  pointer-events: none;
  position: relative;
  width: 100%;
  height: 100%; }
  #tonymaker #tonymaker-box {
    pointer-events: auto;
    position: absolute;
    width: 100%;
    height: 100%;
    max-width: 518.75px;
    max-height: 586.25px;
    border: solid 1px #fff;
    border-radius: 0.5em;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }
    #tonymaker #tonymaker-box h4 {
      margin: 0.5em 0em;
      font-size: 0.9em;
      width: 100%; }
    #tonymaker #tonymaker-box .tonycanvas {
      display: inline-block;
      width: 99%; }
      #tonymaker #tonymaker-box .tonycanvas .loltony-img {
        position: relative;
        width: 99%;
        height: 99%;
        display: inline-block; }
    #tonymaker #tonymaker-box .image-scale {
      position: fixed;
      bottom: 0; }
    #tonymaker #tonymaker-box .save-a-tony {
      background-image: url("/images/save-tony-2x.png");
      margin-top: 2.8em; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYXRlZC9faWNvbnMuc2FzcyIsImJhc2UvX25vcm1hbGl6ZS5zY3NzIiwiYmFzZS9fbWl4aW5zLnNjc3MiLCJiYXNlL190eXBvZ3JhcGh5LnNjc3MiLCJiYXNlL19jb2xvcnMuc2NzcyIsImdsb2JhbC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFJQSxVQUFVO0VBQ1IsV0FBVyxFQUFFLEtBQU07RUFDbkIsR0FBRyxFQUFFLHlCQUFHO0VBQ1IsR0FBRyxFQUFFLGdDQUFHLENBQThCLDJCQUFNLEVBQXVCLDBCQUFHLENBQXdCLGNBQU0sRUFBVSx5QkFBRyxDQUF1QixrQkFBTSxFQUFjLCtCQUFHLENBQTZCLGFBQU07RUFDbE0sV0FBVyxFQUFFLE1BQU87RUFDcEIsVUFBVSxFQUFFLE1BQU87O0FBR2xCLEtBQUssT0FBTyxDQUFKO0VBQ1AsdUJBQXVCLEVBQUUsU0FBVTtFQUNuQyxzQkFBc0IsRUFBRSxXQUFZO0VBQ3BDLE9BQU8sRUFKVyxFQUFFO0VBS3BCLFdBQVcsRUFBRSxPQUFRO0VBQ3JCLFVBQVUsRUFBRSxNQUFPO0VBQ25CLFlBQVksRUFBRSxNQUFPO0VBQ3JCLFdBQVcsRUFBRSxNQUFPO0VBQ3BCLFdBQVcsRUFBRSxDQUFFO0VBQ2YsS0FBSyxFQUFFLElBQUs7RUFDWixjQUFjLEVBQUUsSUFBSyxHQVZiOztBQXVCRyxLQUFLLFVBQVUsT0FBTyxDQUFkO0VBQ3JCLE9BQU8sRUFQTyxLQUFPLEdBTUM7O0FBVVIsS0FBSyxXQUFXLE9BQU8sQ0FBZjtFQUN0QixPQUFPLEVBUFEsS0FBTyxHQU1DOztBQVVYLEtBQUssU0FBUyxPQUFPLENBQWI7RUFDcEIsT0FBTyxFQVBNLEtBQU8sR0FNQzs7QUN2RHZCLDZEQUE2RDtBQUs0QixPQUFPLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLE9BQU8s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QUFLLENBQUMsR0FBRztNQUNqQixTQUFTLEVBQUUsS0FBTTtNQUNqQixLQUFLLEVBQUMsSUFBSyxHQUhWO0lBTUgsVUFBVSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQTFCO01BQ1QsT0FBTyxFQUFDLFlBQWE7TUFHckIsS0FBSyxFQUZTLEdBQUcsR0FGUDtNQU9WLFVBQVUsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBdEM7UUFDVixRQUFRLEVBQUMsUUFBUztRQUNsQixLQUFLLEVBUE8sR0FBRztRQVFmLE1BQU0sRUFSTSxHQUFHO1FBU2YsT0FBTyxFQUFFLFlBQWEsR0FKWDtJQVFmLFVBQVUsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUExQjtNQUNWLFFBQVEsRUFBQyxLQUFNO01BQ2YsTUFBTSxFQUFDLENBQUUsR0FGRTtJQUtiLFVBQVUsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUExQjtNQUNWLGdCQUFnQixFQUFFLCtCQUFHO01BQ3JCLFVBQVUsRUFBQyxLQUFNLEdBRk4iLCJmaWxlIjoiZ2xvYmFsLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIERPIE5PVCBFRElUIERJUkVDVExZIVxuICBHZW5lcmF0ZWQgYnkgZ3VscGZpbGUuanMvdGFza3MvaWNvbkZvbnQuanNcbiAgZnJvbSAuL2d1bHBmaWxlLmpzL3Rhc2tzL2ljb25Gb250L3RlbXBsYXRlLnNhc3NcblxuQGZvbnQtZmFjZVxuICBmb250LWZhbWlseTogaWNvbnNcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9pY29ucy5lb3RcIilcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9pY29ucy5lb3Q/I2llZml4XCIpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSwgdXJsKFwiLi4vZm9udHMvaWNvbnMud29mZlwiKSBmb3JtYXQoJ3dvZmYnKSwgdXJsKFwiLi4vZm9udHMvaWNvbnMudHRmXCIpIGZvcm1hdCgndHJ1ZXR5cGUnKSwgdXJsKFwiLi4vZm9udHMvaWNvbnMuc3ZnI2ljb25zXCIpIGZvcm1hdCgnc3ZnJylcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbFxuICBmb250LXN0eWxlOiBub3JtYWxcblxuPWljb24oJGNvbnRlbnQ6ICcnKVxuICAmOmJlZm9yZVxuICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGVcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZFxuICAgIGNvbnRlbnQ6ICRjb250ZW50XG4gICAgZm9udC1mYW1pbHk6ICdpY29ucydcbiAgICBmb250LXN0eWxlOiBub3JtYWxcbiAgICBmb250LXZhcmlhbnQ6IG5vcm1hbFxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWxcbiAgICBsaW5lLWhlaWdodDogMVxuICAgIHNwZWFrOiBub25lXG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmVcbiAgICBAY29udGVudFxuXG4uaWNvblxuICAraWNvblxuXG4vLyBTYXZlIHZhcmlhYmxlXG4kaWNvbi1mYWNlYm9vazogXCJcXEVBMDFcIlxuLy8gU2F2ZSBtaXhpblxuPWljb24tLWZhY2Vib29rXG4gICtpY29uKCRpY29uLWZhY2Vib29rKVxuICAgIEBjb250ZW50XG4vLyBFeHBvc2UgYXMgY2xhc3Ncbi5pY29uLi1mYWNlYm9vazpiZWZvcmVcbiAgY29udGVudDogJGljb24tZmFjZWJvb2tcblxuLy8gU2F2ZSB2YXJpYWJsZVxuJGljb24taW5zdGFncmFtOiBcIlxcRUEwMlwiXG4vLyBTYXZlIG1peGluXG49aWNvbi0taW5zdGFncmFtXG4gICtpY29uKCRpY29uLWluc3RhZ3JhbSlcbiAgICBAY29udGVudFxuLy8gRXhwb3NlIGFzIGNsYXNzXG4uaWNvbi4taW5zdGFncmFtOmJlZm9yZVxuICBjb250ZW50OiAkaWNvbi1pbnN0YWdyYW1cblxuLy8gU2F2ZSB2YXJpYWJsZVxuJGljb24tdHdpdHRlcjogXCJcXEVBMDNcIlxuLy8gU2F2ZSBtaXhpblxuPWljb24tLXR3aXR0ZXJcbiAgK2ljb24oJGljb24tdHdpdHRlcilcbiAgICBAY29udGVudFxuLy8gRXhwb3NlIGFzIGNsYXNzXG4uaWNvbi4tdHdpdHRlcjpiZWZvcmVcbiAgY29udGVudDogJGljb24tdHdpdHRlclxuXG5cbiIsIi8qKiEgbm9ybWFsaXplLmNzcyB2Mi4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdC5pby9ub3JtYWxpemUgKi9cblxuLy8gSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuXG4vLyBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtYWluLCBuYXYsIHNlY3Rpb24sIHN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLy8gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbmF1ZGlvLCBjYW52YXMsIHZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICAvLyBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICBkaXNwbGF5OiBub25lO1xuICAvLyBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICBoZWlnaHQ6IDA7XG59XG5cbi8vIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8vIEJhc2VcblxuaHRtbCB7XG4gIC8vIFByZXZlbnQgc3lzdGVtIGNvbG9yIHNjaGVtZSdzIGJhY2tncm91bmQgY29sb3IgYmVpbmcgdXNlZCBpbiBGaXJlZm94LCBJRSwgYW5kIE9wZXJhLlxuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAvLyBQcmV2ZW50IHN5c3RlbSBjb2xvciBzY2hlbWUncyB0ZXh0IGNvbG9yIGJlaW5nIHVzZWQgaW4gRmlyZWZveCwgSUUsIGFuZCBPcGVyYS5cbiAgY29sb3I6ICMwMDA7XG4gIC8vIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvLyBQcmV2ZW50IGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xufVxuXG4vLyBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vLyBMaW5rc1xuXG5hIHtcbiAgLy8gQWRkcmVzcyBgb3V0bGluZWAgaW5jb25zaXN0ZW5jeSBiZXR3ZWVuIENocm9tZSBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IHRoaW4gZG90dGVkO1xuICB9XG4gIC8vIEltcHJvdmUgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzLlxuICAmOmFjdGl2ZSwgJjpob3ZlciB7XG4gICAgb3V0bGluZTogMDtcbiAgfVxufVxuXG4vLyBUeXBvZ3JhcGh5XG5cbi8vIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWAgY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpIDUsIGFuZCBDaHJvbWUuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vLyBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LCBTYWZhcmkgNSwgYW5kIENocm9tZS5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLy8gQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpIDUsIGFuZCBDaHJvbWUuXG5iLCBzdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLy8gQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSA1IGFuZCBDaHJvbWUuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8vIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cblxuLy8gQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLy8gQ29ycmVjdCBmb250IGZhbWlseSBzZXQgb2RkbHkgaW4gU2FmYXJpIDUgYW5kIENocm9tZS5cbmNvZGUsIGtiZCwgcHJlLCBzYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4vLyBJbXByb3ZlIHJlYWRhYmlsaXR5IG9mIHByZS1mb3JtYXR0ZWQgdGV4dCBpbiBhbGwgYnJvd3NlcnMuXG5wcmUge1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG59XG5cbi8vIFNldCBjb25zaXN0ZW50IHF1b3RlIHR5cGVzLlxucSB7XG4gIHF1b3RlczogXCLigJxcIiBcIuKAnVwiIFwi4oCYXCIgXCLigJlcIjtcbn1cblxuLy8gQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vLyBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG5zdWIsIHN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8vIEVtYmVkZGVkIGNvbnRlbnRcblxuLy8gUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkuXG5pbWcge1xuICBib3JkZXI6IDA7XG59XG5cbi8vIENvcnJlY3Qgb3ZlcmZsb3cgZGlzcGxheWVkIG9kZGx5IGluIElFIDkuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8vIEZpZ3VyZXNcblxuLy8gQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkgNS5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLy8gRm9ybXNcblxuLy8gRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbmxlZ2VuZCB7XG4gIC8vIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS5cbiAgYm9yZGVyOiAwO1xuICAvLyBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gIHBhZGRpbmc6IDA7XG59XG5cbmJ1dHRvbiwgaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEge1xuICAvLyBDb3JyZWN0IGZvbnQgZmFtaWx5IG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gYWxsIGJyb3dzZXJzLlxuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLy8gQ29ycmVjdCBmb250IHNpemUgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBhbGwgYnJvd3NlcnMuXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLy8gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmkgNSwgYW5kIENocm9tZS5cbiAgbWFyZ2luOiAwO1xufVxuXG4vLyBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluIHRoZSBVQSBzdHlsZXNoZWV0LlxuYnV0dG9uLCBpbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8vIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbi8vIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4vLyBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIENocm9tZSwgU2FmYXJpIDUrLCBhbmQgSUUgOCsuXG4vLyBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3ggNCsgYW5kIE9wZXJhLlxuYnV0dG9uLCBzZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuYnV0dG9uLCBodG1sIGlucHV0W3R5cGU9J2J1dHRvbiddLCBpbnB1dFt0eXBlPSdyZXNldCddLCBpbnB1dFt0eXBlPSdzdWJtaXQnXSB7XG4gIC8vIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgYGh0bWwgaW5wdXRbdHlwZT0nYnV0dG9uJ10geyAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbiB9YCBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAgLy8gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLy8gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGUgYGlucHV0YCBhbmQgb3RoZXJzLlxuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi8vIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG5idXR0b25bZGlzYWJsZWRdLCBodG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuaW5wdXQge1xuICAmW3R5cGU9J2NoZWNrYm94J10sICZbdHlwZT0ncmFkaW8nXSB7XG4gICAgLy8gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS5cbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIC8vIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkuXG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAmW3R5cGU9J3NlYXJjaCddIHtcbiAgICAvLyBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lLlxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAgIC8vIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIDUgYW5kIENocm9tZSAoaW5jbHVkZSBgLW1vemAgdG8gZnV0dXJlLXByb29mKS5cbiAgICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgLy8gUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSA1IGFuZCBDaHJvbWUgb24gT1MgWC5cbiAgICAmOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLCAmOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICB9XG4gIH1cbn1cblxuLy8gUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLCBpbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxudGV4dGFyZWEge1xuICAvLyBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LlxuICBvdmVyZmxvdzogYXV0bztcbiAgLy8gSW1wcm92ZSByZWFkYWJpbGl0eSBhbmQgYWxpZ25tZW50IGluIGFsbCBicm93c2Vycy5cbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLy8gVGFibGVzXG5cbi8vIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG4iLCJAbWl4aW4gZm9udC1zbW9vdGhpbmcge1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLy8gQmFzZWQgb24gaHR0cDovL2NvZGVwZW4uaW8vamF2YXN0ZXZlOTkvcGVuL2hEeHBuXG59XG5cbkBtaXhpbiBmb250LWZhY2UoJGZvbnQtZmFtaWx5LCAkZmlsZS1wYXRoLCAkZm9udC13ZWlnaHQ6IG5vcm1hbCwgJGZvbnQtc3R5bGU6IG5vcm1hbCkge1xuICBAZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5O1xuICAgIHNyYzogdXJsKFwiI3skZmlsZS1wYXRofS5lb3RcIik7XG4gICAgc3JjOiB1cmwoXCIjeyRmaWxlLXBhdGh9LmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIiN7JGZpbGUtcGF0aH0ud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIiN7JGZpbGUtcGF0aH0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIjeyRmaWxlLXBhdGh9LnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiI3skZmlsZS1wYXRofS5zdmcjI3skZm9udC1mYW1pbHl9XCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0O1xuICAgIGZvbnQtc3R5bGU6ICRmb250LXN0eWxlO1xuICB9XG5cbiAgLy8gQ2hyb21lIGZvciBXaW5kb3dzIHJlbmRlcmluZyBmaXg6IGh0dHA6Ly93d3cuYWR0cmFrLmNvLnVrL2Jsb2cvZm9udC1mYWNlLWNocm9tZS1yZW5kZXJpbmcvXG4gIEBtZWRpYSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDApIHtcbiAgICBAZm9udC1mYWNlIHtcbiAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHk7XG4gICAgICBzcmM6IHVybChcIiN7JGZpbGUtcGF0aH0uc3ZnIyN7JGZvbnQtZmFtaWx5fVwiKSBmb3JtYXQoXCJzdmdcIik7XG4gICAgfVxuICB9XG59XG4iLCJAaW5jbHVkZSBmb250LWZhY2UoT3BlblNhbnMsIFwiLi4vZm9udHMvT3BlblNhbnMtUmVndWxhci13ZWJmb250XCIpO1xuXG5AaW5jbHVkZSBmb250LWZhY2UoT3BlblNhbnMsIFwiLi4vZm9udHMvT3BlblNhbnMtQm9sZC13ZWJmb250XCIsIGJvbGQpO1xuXG5cbkBpbmNsdWRlIGZvbnQtZmFjZShNaWNocm9tYSwgXCIuLi9mb250cy9taWNocm9tYS13ZWJmb250XCIsIGJvbGQpO1xuXG5ib2R5IHtcbiAgQGluY2x1ZGUgZm9udC1zbW9vdGhpbmc7XG4gIGNvbG9yOiAkd2hpdGU7XG4gIGZvbnQtZmFtaWx5OiBNaWNocm9tYSwgUmFsZXdheSwgT3BlblNhbnMsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS4yNWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiAwLjc1ZW07XG59XG5cbmEge1xuICBjb2xvcjogJHdoaXRlO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG9wYWNpdHk6IDE7XG4gIG91dGxpbmU6IDA7XG4gIC8vIGF1dG9wcmVmaXhlciB3aWxsIHByZWZpeCB0aGlzIGZvciB5b3UhXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xuICAmOmhvdmVyIHtcbiAgICBvcGFjaXR5OiAwLjU1O1xuICB9XG4gICY6aG92ZXIsICY6Zm9jdXMsICY6YWN0aXZle1xuICAgIG91dGxpbmU6MDtcbiAgfVxufVxuXG4uc2NyZWVucmVhZGVyIHtcbiAgY2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbn1cbiIsIiRsaWdodC1ncmV5OiBsaWdodGdyZXk7XG4kZGFyay1ncmV5OiAjNTU1O1xuJHJlZDogI2U1MzMzOTtcbiRibGFjazogIzAwMDtcbiR3aGl0ZTogI2ZmZjtcblxuJHZpZ2V0TmF2eTogIzA5MmY0MDtcbiR2aWdldE9yYW5nZTogI2YyNmQyMTtcbiR2aWdldEJsdWU6ICMxNDk2YmI7XG5cbiRmYWNlYm9va0JsdWU6ICMzYjU5OTg7XG4kdHdpdHRlckJsdWU6ICM0MDk5ZmY7XG4iLCJAaW1wb3J0IFwiZ2VuZXJhdGVkL2ljb25zXCI7XG5cbkBpbXBvcnQgXCJiYXNlL25vcm1hbGl6ZVwiO1xuLy9AaW1wb3J0IFwiYmFzZS9za2VsZXRvblwiO1xuQGltcG9ydCBcImJhc2UvY29sb3JzXCI7XG5AaW1wb3J0IFwiYmFzZS9taXhpbnNcIjtcbkBpbXBvcnQgXCJiYXNlL3R5cG9ncmFwaHlcIjtcblxuJHdpZHRoRmFjdG9yOiAxLjI1O1xuXG5odG1sLCBib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy9pbWFnZXMvYmtnNi5qcGcnKTtcbn1cblxuLmNvbnRhaW5lcntcbiAgaGVpZ2h0OjEwMCU7XG4gIGxldHRlci1zcGFjaW5nOiAwLjNlbTtcbiAgZm9udC1zaXplOiAwLjg1ZW07XG59XG5cbiNoZWFkZXIge1xuICBwYWRkaW5nLXRvcDoxZW07XG4gIG1hcmdpbi1ib3R0b206MS41ZW0ge31cbiAgdGV4dC1hbGlnbjpjZW50ZXI7XG5cbiAgaW1nIHtcbiAgICB3aWR0aDoxMDAlO1xuICAgIG1heC13aWR0aDogNTg5cHggKiAkd2lkdGhGYWN0b3I7XG4gIH1cbn1cblxuYS50b255bGlua3tcbiAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnL2ltYWdlcy9uZXctdG9ueS0yeC5wbmcnKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQ7XG4gIGJhY2tncm91bmQtc2l6ZTogMWVtO1xuICBwYWRkaW5nLXJpZ2h0OiAxZW07XG59XG5cbiNjb250ZW50IHtcbiAgLnRvbnl2aWV3ZXIge1xuICAgd2lkdGg6MTAwJTtcbiAgIG1heC13aWR0aDogMzAxcHggKiAkd2lkdGhGYWN0b3I7XG4gIH1cblxuICAudG9ueWxpbmtze1xuICAgIG1hcmdpbi10b3A6IDFlbTtcblxuICAgIC5tYWtlLWEtdG9ueXtcbiAgICAgIG1hcmdpbi1yaWdodDogMmVtO1xuICAgIH1cbiAgICAubGluay1hLXRvbnl7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy9pbWFnZXMvbGluay10b255LTJ4LnBuZycpO1xuICAgIH1cbiAgfVxufVxuXG4jZm9vdGVyIHtcbiAgcGFkZGluZy10b3A6IDNlbTtcbiAgcGFkZGluZy1ib3R0b206IDFlbTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OjA7XG4gIHJpZ2h0OjA7XG5cbiAgI3RvbnktZm9vdGVye1xuXG4gICAgLnRvbnktZm9vdGVyLXRodW1ie1xuICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICBwYWRkaW5nOiAxZW0gMWVtIDBlbSAwZW07XG4gICAgICBtYXgtaGVpZ2h0OiAxMmVtO1xuICAgIH1cbiAgfVxuXG59XG5cblxuJGFuaW1UaW1lOiAwLjNzO1xuLm92ZXJsYXktdmlzaWJsZXtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgb3BhY2l0eToxO1xuICB0cmFuc2l0aW9uOiB2aXNpYmlsaXR5ICRhbmltVGltZSBsaW5lYXIsIG9wYWNpdHkgJGFuaW1UaW1lIGxpbmVhcjtcbiAgLy90cmFuc2l0aW9uLWRlbGF5OiAwcztcbn1cblxuLm92ZXJsYXktaW52aXNpYmxle1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIG9wYWNpdHk6MDtcbiAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwcyBsaW5lYXIgJGFuaW1UaW1lLCBvcGFjaXR5ICRhbmltVGltZSBsaW5lYXI7XG59XG5cbi5vdmVybGF5e1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDowO1xuICBib3R0b206MDtcbiAgbGVmdDowO1xuICByaWdodDowO1xuICB3aWR0aDoxMDAlO1xuICBoZWlnaHQ6MTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjg1KTtcbiAgei1pbmRleDogNTAwO1xuICB0ZXh0LWFsaWduOmNlbnRlcjtcblxuICAub3ZlcmxheS1jbG9zZXtcbiAgICBwb3NpdGlvbjpmaXhlZDtcbiAgICByaWdodDowO1xuICAgIHRvcDowO1xuICAgIHBhZGRpbmctdG9wOjFlbTtcbiAgICBwYWRkaW5nLXJpZ2h0OjFlbTtcbiAgICB3aWR0aDoyN3B4ICogJHdpZHRoRmFjdG9yO1xuICB9XG59XG5cblxuI3RvbnltYWtlciB7XG4gIHBvaW50ZXItZXZlbnRzOm5vbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6MTAwJTtcbiAgaGVpZ2h0OjEwMCU7XG5cbiAgI3RvbnltYWtlci1ib3h7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDQxNXB4ICogJHdpZHRoRmFjdG9yO1xuICAgIG1heC1oZWlnaHQ6IDQ2OXB4ICogJHdpZHRoRmFjdG9yO1xuICAgIGJvcmRlcjogc29saWQgMXB4ICR3aGl0ZTtcbiAgICBib3JkZXItcmFkaXVzOiAwLjVlbTtcbiAgICB0b3A6NTAlO1xuICAgIGxlZnQ6NTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuXG4gICAgaDR7XG4gICAgICBtYXJnaW46IDAuNWVtIDBlbTtcbiAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgICB3aWR0aDoxMDAlO1xuICAgIH1cblxuICAgIC50b255Y2FudmFze1xuICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICAkY2FudmFzV2lkdGg6IDk5JTtcbiAgICAgIC8vJGNhbnZhc0hlaWdodDogKCgkY2FudmFzV2lkdGgqNDE1KS80NjkpO1xuICAgICAgd2lkdGg6ICRjYW52YXNXaWR0aDtcbiAgICAgIC8vaGVpZ2h0OiAkY2FudmFzSGVpZ2h0O1xuXG4gICAgICAubG9sdG9ueS1pbWd7XG4gICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICB3aWR0aDogJGNhbnZhc1dpZHRoO1xuICAgICAgICBoZWlnaHQ6ICRjYW52YXNXaWR0aDtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5pbWFnZS1zY2FsZXtcbiAgICAgIHBvc2l0aW9uOmZpeGVkO1xuICAgICAgYm90dG9tOjA7XG4gICAgfVxuXG4gICAgLnNhdmUtYS10b255e1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcvaW1hZ2VzL3NhdmUtdG9ueS0yeC5wbmcnKTtcbiAgICAgIG1hcmdpbi10b3A6Mi44ZW07XG4gICAgfVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */